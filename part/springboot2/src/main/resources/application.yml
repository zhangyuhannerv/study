# 补充说明：spring的application.properties和application.yml存在哪个都行。甚至两个都存在spring会把两个合在一起都生效
person:
  userName: 张三 # 默认是双引号
  #  userName: "张三 \n 李四" # ""会将\n作为换行符输出,双引号不会转义(不改变换行符本身的意思)
  #  userName: '张三 \n 李四' #''会将\n作为字符串输出,单引号会转义(将换行符转译为了字符串)
  boss: true
  birth: 2019/12/9
  age: 18
  pet:
    name: 旺财
    weight: 99.99
  #  interests: [篮球,足球]
  interests:
    - 篮球
    - 足球
    - 18
  animal:
    - 阿猫
    - 阿狗
  #  score: {english: 80,math: 90}
  score:
    english: 80
    math: 90
  salarys:
    - 9999.98
    - 8888.98
  allPets:
    sick:
      - { name: 小强,weight: 10 }
      - name: 星猫
        weight: 20
      - name: 可达鸭
        weight: 30
    health: [ { name: 阿花,weight: 80 },{ name: 阿艹, weight: 90 } ]
hello:
  prefix: 你好啊
  suffix: '!!!???'
spring:
  boot:
    admin:
      client:
        url: http://127.0.0.1:8082 #这是管理微服务的综合平台（springboot2-admin-server)
  application:
    name: @project.artifactId@
  banner:
    image:
      bitdepth: 8
  profiles:
    active: dev # 激活某个特定的配置文件
#    active: test # 激活某个特定的配置文件
    # 激活某个配置文件的几个规则
    # 0.环境标识符application-xxx.yml中的xxx是任意的。不过一般会通用这几个：dev，test，prod
    # 1.没有标识的配置为默认配置文件，总会加载
    # 2.如果配置了某个配置文件。那么特定的配置文件和默认的配置文件同时生效
    # 3.如果默认配置文件和特定配置文件存在某些相同的配置，那么以特定配置文件（dev/test/prod)优先
# 批量加载配置文件
#    group:
#      mytest:
#        - test
#        - test1
#      myprod:
#        - prod
#        - prod1
#    active: mytest
  # 批量计在配置文件的几个规则
  # 1.如果test,test1同时加载，出现同名配置，test1生效。即写在后面的最终生效
  # 2.不影响@Profile的功能。如例子中的@Profile("test")仍然正常生效
  # 3.当选择mytest时，会读取组名之下所有元素名称的配置文件。配置文件生效的有：mytest（组名）,test,test1。此时@Profile写test/test1/mytest都可以


  mvc:
    # 开启rest风格,注意：这里因为web开发只能发送get/post，所以需要这里开启来指定额外的发送方式。
    # 如果是客户端，那么可以直接发送DELETE或者PATCH或者PUT等。无需开启该项。
    hiddenmethod:
      filter:
        enabled: true

    # 静态资源默认是/**，这里是配置加个前缀，注意：会导致静态资源首页功能失效，图标功能失效
    #static-path-pattern: /res/**

    # 开启基于请求参数的内容协商。效果是能配个参数（默认是format)代替浏览器请求头的的Accept值。手动指定浏览器能接收哪些参数
    contentnegotiation:
      favor-parameter: true
  web:
    resources:
      #       手动指定自定义静态资源路径，默认的静态4个静态资源访问路径全部失效
      static-locations: classpath:/customeStaticFile
#       禁用静态资源，所有的静态资源都访问不了
#      add-mappings: false
  datasource:
    url: jdbc:mysql://127.0.0.1:10000/test?useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
#    类型默认配置了，所以注掉
#    type: com.zaxxer.hikari.HikariDataSource

#   非druidStarter(没有引入druidStarter,只引了个jar包，其余都是自己定义详见DruidConfig.class)可以在这里写属性
#    filters: stat,wall

#   druidStarter（引入了druidStarter)的扩展属性
    druid:
      filters: stat,wall
      filter:
        stat:
          enabled: true
          slow-sql-millis: 1000
          log-slow-sql: true
        wall:
          enabled: true
          config:
            # 示例：关闭所有的sql更新功能
            update-allow: false
      stat-view-servlet:
        enabled: true
        login-username: druid
        login-password: druid
        reset-enable: false
        url-pattern: /druid/*
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
      aop-patterns: com.study.springboot2study.*
  jdbc:
    template:
#      3s没查出来就认为查询超时
      query-timeout: 3
# redis部分，配合redis-starter使用
  redis:
#    host: 127.0.0.1
#    port: 6379
#    username: redis
#    password: redis
#    上面四个可以统合起来
#    url: redis://redis:redis@127.0.0.1:6379
    url: redis://127.0.0.1:6379
    client-type: jedis
#    lettuce:
#      pool:
#        max-active: 10
#        min-idle: 5
    jedis:
      pool:
        # 最大连接
        max-active: 10
        # 最小空闲
        min-idle: 5
server:
  servlet:
    context-path: /word
#  默认的错误请求路径
#  error:
#    path: /error

## 配置mybatis规则(配合mybatis-start使用）
#mybatis:
#  # 全局配置文件位置
#  config-location: classpath:mybatis/mybatis-config.xml
#  # sql映射文件位置
#  mapper-locations: classpath:mybatis/mapper/*
#  # 全局配置
#  # 注意，一旦写了configuration，就不能写上面的config-location了。它们两个冲突
#  # 即mybatis的全局配置文件完全可以用configuration代替。在写了configuration后，全局配置文件可以省略掉
#  # 推荐这种写法
#  configuration:
#    # 开启驼峰名命规则
#    map-underscore-to-camel-case: true

# 配置mybatis-plus规则(配合mybatis-plus-starter使用）
mybatis-plus:
  # 配置sql映射文件位置，注意：它有默认值，所以要改成整合mybatis时的值
  mapper-locations: classpath:mybatis/mapper/*

# actuator(指标监控部分），和actuator-starter配合使用
# management是所有actuator配置管理的起始部分
management:
# 配置所有端点
  endpoints:
    # 开启所有监控端点（如果不配置，实际上，默认也是开启所有监控端点的，即默认值是true）。
    # 配合管理平台，能看到更详细的信息，如果管理平台没开启，那么这里还是注释掉,下面的关闭所有端点的配置项解开注释
    enabled-by-default: true
#    enabled-by-default: false # 关闭所有监控端点
    web:
      exposure:
        include: '*' # 默认是在web下只暴露health端点
# 每一个端点的详细配置
  endpoint:
    health:
      show-details: always # 默认是never,即总是不展示详细信息
      enabled: true # 如果想要只开启特定的端点，那么要在上面关闭所有的端点，然后在下面单独配置某个端点的时候开启它
    info:
      enabled: true
    beans:
      enabled: true
    metrics: # 指标
      enabled: true
    env:
      enabled: true

# 在info里配置的信息在监控的/actuator/env里都能看到
# info里的k-v是随便自定义的
info:
  appName: springboot2study
  appVersion: 1.0.0
  a: bbbbb
  # 这里是直接从maven的配置文件pom.xml里取值
  mavenProjectName: @project.artifactId@
  mavenProjectVersin: @project.version@

# 测试配置文件加载优先级
# 具体springboot会找哪几个位置的配置文件，
# 请看文档https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.files
test-precedence:
  value: 这是类路径的根目录下的配置



